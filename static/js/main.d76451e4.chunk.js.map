{"version":3,"sources":["TaxTable.jsx","TaxForm.jsx","App.js","index.js"],"names":["TaxTable","className","Component","TaxForm","handleChangeInput","event","target","name","value","props","onChangeSalary","this","salary","tax","htmlFor","id","type","onChange","toFixed","App","state","handleChangeSalary","taxAmt","calTax","setState","baseAmt","variableAmt","document","title","ReactDOM","render","StrictMode","getElementById"],"mappings":"2NAyCeA,G,mLArCX,OACE,yBAAKC,UAAU,aACb,2BAAOA,UAAU,4CACf,2BAAOA,UAAU,eACf,4BACE,8CACA,+CAGJ,+BACE,4BACE,iDACA,mCAEF,4BACE,sDACA,6DAEF,4BACE,sDACA,2EAEF,4BACE,uDACA,0EAEF,4BACE,iDACA,kF,GA9BSC,cCgDRC,E,4MA5CbC,kBAAoB,SAACC,GAAW,IAAD,EACLA,EAAMC,OAAtBC,EADqB,EACrBA,KAAMC,EADe,EACfA,MAED,WAATD,GACF,EAAKE,MAAMC,eAAeF,I,uDAIpB,IAAD,EACiBG,KAAKF,MAArBG,EADD,EACCA,OAAQC,EADT,EACSA,IAShB,OACE,yBAAKZ,UAAU,oCACb,yBAAKA,UAAU,cACb,2BAAOa,QAAQ,UAAf,mCACA,2BACEC,GAAG,SACHR,KAAK,SACLS,KAAK,SACLf,UAAU,oBACVgB,SAAUN,KAAKP,kBACfI,MAAOI,KAGX,6BACE,iDACA,kCAAQC,EAAIK,QAAQ,KAEtB,yBAAKjB,UAAU,UACb,2DACA,+BAtBgB,KAFO,IAARY,EAAYA,EAAMD,EAAS,IAwBtBM,QAAQ,GAA5B,W,GAzCYhB,aCoEPiB,E,4MA/DbC,MAAQ,CAAER,OAAQ,EAAGC,IAAK,G,EAQ1BQ,mBAAqB,SAACT,GAEpB,IAAMU,EAAS,EAAKC,OAAOX,GAE3B,EAAKY,SAAS,CAAEZ,OAAQA,EAAQC,IAAKS,K,EAIvCC,OAAS,SAACX,GACR,IACIa,EAAU,EACVC,EAAc,EAwBlB,OAtBId,GAAU,SACZa,EAAU,MACVC,EAAkC,KAAnBd,EAAS,OAGjBA,GAAU,OACjBa,EAAU,MACVC,EAAiC,KAAlBd,EAAS,MAGjBA,GAAU,OACjBa,EAAU,KACVC,EAAiC,MAAlBd,EAAS,OAGjBA,GAAU,QACjBc,EAAiC,KAAlBd,EAAS,QAKda,EAAUC,G,kEAtCtBC,SAASC,MAAQ,mB,+BA2CjB,OACE,6BACE,wBAAI3B,UAAU,eAAd,mDAGA,kBAAC,EAAD,MACA,kBAAC,EAAD,CACEW,OAAQD,KAAKS,MAAMR,OACnBC,IAAKF,KAAKS,MAAMP,IAChBH,eAAgBC,KAAKU,0B,GAzDbnB,aCDlB2B,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFJ,SAASK,eAAe,U","file":"static/js/main.d76451e4.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass TaxTable extends Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <table className=\"table table-bordered table-hover mx-auto\">\n          <thead className=\"thead-light\">\n            <tr>\n              <th>Taxable Income</th>\n              <th>Tax on Income</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td>$0 – $18,200</td>\n              <td>$0</td>\n            </tr>\n            <tr>\n              <td>$18,201 – $37,000</td>\n              <td>19c for each $1 over $18,200</td>\n            </tr>\n            <tr>\n              <td>$37,001 – $90,000</td>\n              <td>$3,572 plus 32.5c for each $1 over $37,000</td>\n            </tr>\n            <tr>\n              <td>$90,001 – $180,000</td>\n              <td>$20,797 plus 37c for each $1 over $90,000</td>\n            </tr>\n            <tr>\n              <td>$180,001 and over</td>\n              <td>$54,097 plus 45c for each $1 over $180,000</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default TaxTable;\n","import React, { Component } from \"react\";\n\nclass TaxForm extends Component {\n  /* Extract the salary value from the <input>\n   * and update the state variable in App.jsx\n   */\n  handleChangeInput = (event) => {\n    const { name, value } = event.target;\n    // Case 1: User provided salary input\n    if (name === \"salary\") {\n      this.props.onChangeSalary(value);\n    }\n  };\n\n  render() {\n    const { salary, tax } = this.props;\n    let afterTaxSalary = salary - tax;\n    let percentage = () => {\n      // calculate proportion (tax/salary)\n      const taxPortion = tax !== 0 ? tax / salary : 0;\n      // return percentage\n      return taxPortion * 100;\n    };\n\n    return (\n      <div className=\"shadow p-3 bg-white w-50 mx-auto\">\n        <div className=\"form-group\">\n          <label htmlFor=\"salary\">Enter your pre-tax salary: &nbsp;</label>\n          <input\n            id=\"salary\"\n            name=\"salary\"\n            type=\"number\"\n            className=\"form-control w-50\"\n            onChange={this.handleChangeInput}\n            value={salary}\n          />\n        </div>\n        <div>\n          <span>Tax Amount:&nbsp;</span>\n          <span>${tax.toFixed(2)}</span>\n        </div>\n        <div className=\"d-flex\">\n          <span>Percentage of Income:&nbsp;</span>\n          <span>{percentage().toFixed(2)}%</span>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TaxForm;\n","import React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap/dist/js/bootstrap.bundle.min.js\";\nimport TaxTable from \"./TaxTable\";\nimport TaxForm from \"./TaxForm\";\n\nclass App extends Component {\n  state = { salary: 0, tax: 0 };\n\n  // change document title\n  componentDidMount() {\n    document.title = \"Tax Calculator\";\n  }\n\n  // Update State: Salary and Tax\n  handleChangeSalary = (salary) => {\n    // Calculate new tax amount\n    const taxAmt = this.calTax(salary);\n    // Update salary and tax state\n    this.setState({ salary: salary, tax: taxAmt });\n  };\n\n  // Calculate Tax Amount\n  calTax = (salary) => {\n    let taxAmount = 0;\n    let baseAmt = 0;\n    let variableAmt = 0;\n    // Case 1: $180,001 and over\n    if (salary >= 1800001) {\n      baseAmt = 54097;\n      variableAmt = (salary - 180000) * 0.45;\n    }\n    // Case 2: $90,001 – $180,000\n    else if (salary >= 90001) {\n      baseAmt = 20797;\n      variableAmt = (salary - 90000) * 0.37;\n    }\n    // Case 3: $37,001 – $90,000\n    else if (salary >= 37001) {\n      baseAmt = 3572;\n      variableAmt = (salary - 37000) * 0.325;\n    }\n    // Case 4: $18,201 – $37,000\n    else if (salary >= 18201) {\n      variableAmt = (salary - 18200) * 0.19;\n    }\n    // Case 5: $0 – $18,200 (zero tax)\n\n    // Calculate tax\n    taxAmount = baseAmt + variableAmt;\n    return taxAmount;\n  };\n\n  render() {\n    return (\n      <div>\n        <h1 className=\"text-center\">\n          Income Tax Calculator for Individuals 2019-2020\n        </h1>\n        <TaxTable />\n        <TaxForm\n          salary={this.state.salary}\n          tax={this.state.tax}\n          onChangeSalary={this.handleChangeSalary}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}